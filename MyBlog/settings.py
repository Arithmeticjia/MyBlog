"""
Django settings for MyBlog project.

Generated by 'django-admin startproject' using Django 2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
os.environ['DJANGO_SETTINGS_MODULE'] = 'MyBlog.settings'
import logging
import django_crontab
import django.utils.log
import logging.handlers
from django.core.mail import send_mail

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'h&=3ij)am@-$ql-0@ek)j%g^8mo7i_mb(*fl!3i(mq^(!c)3#u'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# AUTH_USER_MODEL = "JiaBlog.BlogUser"


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'dwebsocket',
    'JiaBlog',
    'mdeditor',
    'django_crontab',
    'social_django',
    'haystack',
    'emoji',
    'rest_framework',
    'werkzeug_debugger_runserver',
    'django_extensions',
    'sslserver',
    'social_core',
    'imagekit',
    'online_intepreter'
]

HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.whoosh_cn_backend.WhooshEngine',
        'PATH': os.path.join(BASE_DIR, 'whoosh_index'),
    }
}
# 每页显示搜索结果数目为10
HAYSTACK_SEARCH_RESULTS_PER_PAGE = 10
# 自动生成索引
HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'MyBlog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'MyBlog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases
# 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'MyBlog',
        'USER': 'root',
        'PASSWORD': 'D980612ssj$',
        'HOST': '127.0.0.1',
        'PORT': '3306',
        'OPTIONS': {'charset': 'utf8mb4'}
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# SERVER_EMAIL ='1524126437@qq.com'
EMAIL_HOST = 'smtp.qq.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = '1524126437@qq.com'
EMAIL_HOST_PASSWORD = 'opkaarrkfgmqfgej'
EMAIL_FROM = '1524126437@qq.com'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'filters': {
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'include_html': False,
        }
    },
    'loggers': {

        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'DEBUG',
            'propagate': False,
        }
    }
}
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
# STATIC_ROOT = 'static'   # 去掉注释
# PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))
# STATIC_ROOT = os.path.join(PROJECT_ROOT, 'staticfiles')
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),  # 加/
    os.path.join(BASE_DIR, 'media'),   # 加/
    # os.path.join(os.path.dirname(__file__), '../static/').replace('\\', '/'),
)

# 文件上传的路径
MEDIA_URL = '/media/'   # 访问资源的地址如 http://127.0.0.1:5000/media/1.jpg
# 写相对路径也可以
MEDIA_ROOT = os.path.join(BASE_DIR, 'media').replace('\\', '/')

# AUTH_USER_MODEL ="Blog.User"
# AUTH_USER_MODEL = 'users.UserProfile'
# AUTHENTICATION_BACKENDS = (
#                           'django.contrib.auth.backends.ModelBackend', # this is default
#                          'guardian.backends.ObjectPermissionBackend',
#                          )

WEBSOCKET_FACTORY_CLASS = 'dwebsocket.backends.uwsgi.factory.uWsgiWebSocketFactory'

AUTHENTICATION_BACKENDS = (
                           'django.contrib.auth.backends.ModelBackend',     # django默认的backend
                           'social_core.backends.facebook.FacebookOAuth2',  # facebook
                           'social_core.backends.weibo.WeiboOAuth2',        # weibo
                           'social_core.backends.google.GoogleOpenId',
                           'social_core.backends.google.GoogleOAuth2',
                           'social_core.backends.google.GoogleOAuth',
                           'social_core.backends.github.GithubOAuth2',      # github_login
)

SOCIAL_AUTH_URL_NAMESPACE = 'social'

SOCIAL_AUTH_WEIBO_KEY = '2841315419'
SOCIAL_AUTH_WEIBO_SECRET = '2edc15ab9266564e9fb53a56bd5a8ff3'
SOCIAL_AUTH_FACEBOOK_KEY = '2513272488741954'
SOCIAL_AUTH_FACEBOOK_SECRET = 'ee2679d8ec7c0f0acaf4a28593540bb9'
SOCIAL_AUTH_GITHUB_KEY = 'a795f2ab426bd61fa09d'
SOCIAL_AUTH_GITHUB_SECRET = '492ccf3eaa79722cc54ab9f534a98a80a2d7df88'
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY= '284016272164-42v8drgc58o2gl0m09r4mgqckr10ieo1.apps.googleusercontent.com'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '8xIY0aZmzeSwse9DactvxKdT'
SOCIAL_AUTH_GITHUB_USE_OPENID_AS_USERNAME = True
SOCIAL_AUTH_FACEBOOK_USE_OPENID_AS_USERNAME = True

SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/JiaBlog/index/'

CRONJOBS = (
            ('*/1 * * * *', 'JiaBlog.views.collect_cpu'),
)

# cache
# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
#         'LOCATION': [
#             '127.0.0.1:11211',
#         ]
#     }
# }